name: CI/CD - Deploy no AKS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Listar arquivos da raiz
        run: ls -la

      - name: Restaurar pacotes
        run: dotnet restore Tech.Challenge.Grupo27.sln

      - name: Publicar aplicação
        run: dotnet publish Tech.Challenge.Grupo27.sln -c Release -o ./publish

      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          version: 1.21.0
  
      - name: Fazer login no registro Docker
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }} 

      - name: Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Build imagens com Docker Compose
        run: docker-compose build

      - name: Push imagens para Docker Hub
        run: docker-compose push

      - name: Listar arquivos no diretório
        run: |
          echo "Executando dir..."
          dir

      - name: Criar secret de acesso ao Docker Hub no AKS
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-password=${{ secrets.DOCKERHUB_PASSWORD }} \
            --docker-email=${{ secrets.DOCKERHUB_EMAIL }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Implantação no Kubernetes
        run: kubectl apply -f k8s
