version: '3.4'

services:
  tech.challenge.grupo27.api:
    image: matheuslascala/fiap-techchallenge:contato-api-consultar-4.0
    build:
      context: .
      dockerfile: src/Tech.Challenge.Grupo27.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8000
      - ASPNETCORE_HTTPS_PORTS=8001 
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - mssql-server
    ports:
      - "5020:8001"
      - "5010:8000" 
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.3 

  tech.challenge.grupo27.inserir.contato:
    image: matheuslascala/fiap-techchallenge:contato-api-inserir-4.0
    build:
      context: .
      dockerfile: src/Tech.Challenge.API.Inserir.Contato/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8004
      - ASPNETCORE_HTTPS_PORTS=8005
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - mssql-server
    ports:
      - "5030:8005"
      - "5045:8004" 
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.3

  tech.challenge.grupo27.atualizar.contato:
    image: matheuslascala/fiap-techchallenge:contato-api-atualizar-4.0
    build:
      context: .
      dockerfile: src/Tech.Chanllenge.Grupo27.API.Atualizar/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8009
      - ASPNETCORE_HTTPS_PORTS=8008
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - mssql-server
    ports:
      - "5070:8009"
      - "5065:8008" 
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.3 

  tech.challenge.grupo27.delete.contato:
    image: matheuslascala/fiap-techchallenge:contato-api-deletar-4.0
    build:
      context: .
      dockerfile: src/Tech.Chanllenge.Grupo27.API.Delete.Contato/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8011
      - ASPNETCORE_HTTPS_PORTS=8010
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - mssql-server
    ports:
      - "5080:8011"
      - "5075:8010" 
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.3 

  tech.challenge.grupo27.worker:
    image: matheuslascala/fiap-techchallenge:contato-worker-4.0
    build:
      context: .
      dockerfile: src/Tech.Challenge.Grupo27.Worker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8006
      - ASPNETCORE_HTTPS_PORTS=8007
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - mssql-server
    ports:
      - "5060:8007"
      - "5055:8006" 
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.3 

  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    hostname: "SqlServer"
    environment:
      MSSQL_SA_PASSWORD: techchanllenge@123
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"  

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

  mssqltools:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - mssql-server
    volumes:
      - ./local/compose/sqlserver/createdatabase.sql:/tmp/createdatabase.sql
      - ./local/compose/sqlserver/criandotabelas.sql:/tmp/criandotabelas.sql
      - ./local/compose/sqlserver/init-contato.sh:/tmp/init-contato.sh
    command: /bin/bash ./tmp/init-contato.sh

  rabbitmq:
    build:
      context: ./local/compose/rabbitmq
      dockerfile: Dockerfile
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

volumes:  
  grafana-storage:

networks:
  minha-rede:
    driver: bridge
