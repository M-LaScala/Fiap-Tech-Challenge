version: '3.4'

services:
  tech.challenge.grupo27.api:
    image: ${DOCKER_REGISTRY-}techchallengegrupo27api
    build:
      context: .
      dockerfile: src/Tech.Challenge.Grupo27.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8000
      - ASPNETCORE_HTTPS_PORTS=8001
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
    - mssql-server
    ports:
    - "5020:8001"
    - "5010:8000" 
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.3 
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    hostname: "SqlServer"
    environment:
      MSSQL_SA_PASSWORD: techchanllenge@123
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Senha de administrador
    volumes:
      - grafana-storage:/var/lib/grafana
networks:
  monitoring:
    driver: bridge
volumes:
  grafana-storage: